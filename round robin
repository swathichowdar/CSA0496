#include <stdio.h>

int main() {
int n = 5, m = 3;
int available[] = {3, 3, 2};
int allocation[5][3] = {{0,1,0},{2,0,0},{3,0,2},{2,1,1},{0,0,2}},
max[5][3] = {{7,5,3},{3,2,2},{9,0,2},{2,2,2},{4,3,3}}, work[] = {3,3,2}, finish[5] = {0}, count = 0;

printf("Safe state\n");
printf("Safe sequence: ");

while (count < n) {
int found = 0;
for (int i = 0; i < n; i++) {
if (!finish[i]) {
int canAllocate = 1;
for (int j = 0; j < m; j++) if (max[i][j] - allocation[i][j] > work[j]) { canAllocate = 0; break; }
if (canAllocate) {
for (int k = 0; k < m; k++) work[k] += allocation[i][k];
finish[i] = 1;
count++;
printf("P%d ", i);
found = 1;
}
}
}
if (!found) {
printf("Unsafe state\n");
return 0;
}
}

return 0;
}
